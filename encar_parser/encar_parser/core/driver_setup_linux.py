"""
WebDriver setup and configuration for Ubuntu Server
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebDriver –¥–ª—è Ubuntu —Å–µ—Ä–≤–µ—Ä–∞ —Å –∞–Ω—Ç–∏-–∫–∞–ø—á–∞ –º–µ—Ä–∞–º–∏
"""
import os
import platform
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.wait import WebDriverWait


def setup_chrome_driver(headless=True, window_size="1920,1080"):
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome WebDriver –¥–ª—è Ubuntu —Å–µ—Ä–≤–µ—Ä–∞
    
    Args:
        headless: –ó–∞–ø—É—Å–∫ –≤ headless —Ä–µ–∂–∏–º–µ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ True –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞)
        window_size: –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        
    Returns:
        tuple: (driver, wait) - —ç–∫–∑–µ–º–ø–ª—è—Ä—ã WebDriver –∏ WebDriverWait
        
    Raises:
        Exception: –ü—Ä–∏ –æ—à–∏–±–∫–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞
    """
    chrome_options = Options()
    
    # –ö–†–ò–¢–ò–ß–ù–û –¥–ª—è Ubuntu —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ GUI
    chrome_options.add_argument("--headless=new")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--disable-software-rasterizer")
    chrome_options.add_argument(f"--window-size={window_size}")
    
    # –î–ª—è —Ä–∞–±–æ—Ç—ã –≤ Docker/–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
    chrome_options.add_argument("--disable-setuid-sandbox")
    
    # –ê–ù–¢–ò-–î–ï–¢–ï–ö–¶–ò–Ø
    chrome_options.add_argument("--disable-blink-features=AutomationControlled")
    chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
    chrome_options.add_experimental_option("useAutomationExtension", False)
    
    # SSL –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    chrome_options.add_argument("--ignore-ssl-errors")
    chrome_options.add_argument("--ignore-certificate-errors")
    chrome_options.add_argument("--allow-insecure-localhost")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–µ–µ
    chrome_options.add_argument("--disable-extensions")
    chrome_options.add_argument("--disable-plugins")
    chrome_options.add_argument("--disable-infobars")
    
    # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    chrome_options.add_argument("--disable-dev-tools")
    chrome_options.add_argument("--disable-browser-side-navigation")
    chrome_options.add_argument("--dns-prefetch-disable")
    
    # –õ–æ–≥–∏
    chrome_options.add_argument("--log-level=3")
    chrome_options.add_argument("--silent")
    chrome_options.add_experimental_option(
        "excludeSwitches", ["enable-logging"]
    )
    
    # User Agent
    chrome_options.add_argument(
        "--user-agent=Mozilla/5.0 (X11; Linux x86_64) "
        "AppleWebKit/537.36 (KHTML, like Gecko) "
        "Chrome/120.0.0.0 Safari/537.36"
    )
    
    # –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    chrome_options.add_argument("--lang=ko-KR")
    chrome_options.add_experimental_option(
        "prefs", {
            "intl.accept_languages": "ko,ko-KR,en-US,en",
            "profile.default_content_setting_values.notifications": 2,
            "profile.managed_default_content_settings.images": 1
        }
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞
    chrome_options.add_argument("--disable-web-security")
    chrome_options.add_argument("--disable-features=IsolateOrigins,site-per-process")
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ chromedriver
        service = None
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π chromedriver
        if os.path.exists("/usr/bin/chromedriver"):
            service = Service("/usr/bin/chromedriver")
            print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–π ChromeDriver: /usr/bin/chromedriver")
        elif os.path.exists("/usr/local/bin/chromedriver"):
            service = Service("/usr/local/bin/chromedriver")
            print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ChromeDriver: /usr/local/bin/chromedriver")
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º webdriver-manager –¥–ª—è –∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏
            try:
                from webdriver_manager.chrome import ChromeDriverManager
                service = Service(ChromeDriverManager().install())
                print("ChromeDriver —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ webdriver-manager")
            except ImportError:
                print("‚ö†Ô∏è webdriver-manager –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–π driver")
        
        # –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
        if service:
            driver = webdriver.Chrome(service=service, options=chrome_options)
        else:
            driver = webdriver.Chrome(options=chrome_options)
        
        # –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ webdriver property
        driver.execute_cdp_cmd(
            "Page.addScriptToEvaluateOnNewDocument",
            {
                "source": """
                Object.defineProperty(navigator, 'webdriver', {
                    get: () => undefined
                });
                
                window.navigator.chrome = {
                    runtime: {}
                };
                
                Object.defineProperty(navigator, 'plugins', {
                    get: () => [1, 2, 3, 4, 5]
                });
                
                Object.defineProperty(navigator, 'languages', {
                    get: () => ['ko-KR', 'ko', 'en-US', 'en']
                });
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è Ubuntu
                Object.defineProperty(navigator, 'platform', {
                    get: () => 'Linux x86_64'
                });
            """
            },
        )
        
        wait = WebDriverWait(driver, 15)
        print("‚úÖ Chrome WebDriver —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (Ubuntu Server)")
        return driver, wait
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebDriver: {e}")
        print("\nüìã –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
        print("   - Google Chrome –∏–ª–∏ Chromium")
        print("   - ChromeDriver")
        print("\n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Ubuntu:")
        print_ubuntu_install_instructions()
        raise


def print_ubuntu_install_instructions():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Chrome –∏ ChromeDriver –Ω–∞ Ubuntu"""
    print("\n" + "="*60)
    print("–£–°–¢–ê–ù–û–í–ö–ê CHROME –ò CHROMEDRIVER –ù–ê UBUNTU")
    print("="*60)
    print("""
# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
sudo apt update && sudo apt upgrade -y

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
sudo apt install -y wget curl unzip xvfb libxi6 libgconf-2-4

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Google Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install -y ./google-chrome-stable_current_amd64.deb
rm google-chrome-stable_current_amd64.deb

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Chrome
google-chrome --version

# 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ChromeDriver (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ webdriver-manager –≤ –∫–æ–¥–µ

# –ò–õ–ò —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä—É—á–Ω—É—é:
# –£–∑–Ω–∞–π—Ç–µ –≤–µ—Ä—Å–∏—é Chrome –∏ —Å–∫–∞—á–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ChromeDriver:
# https://chromedriver.chromium.org/downloads

# –ü—Ä–∏–º–µ—Ä –¥–ª—è ChromeDriver 120:
# wget https://chromedriver.storage.googleapis.com/120.0.6099.109/chromedriver_linux64.zip
# unzip chromedriver_linux64.zip
# sudo mv chromedriver /usr/bin/chromedriver
# sudo chmod +x /usr/bin/chromedriver

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
chromedriver --version

# 7. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ GUI (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# export DISPLAY=:99
# Xvfb :99 -screen 0 1920x1080x24 &
""")
    print("="*60)


def check_chrome_installation():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Chrome –∏ ChromeDriver
    
    Returns:
        dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    """
    result = {
        "chrome_installed": False,
        "chrome_version": None,
        "chromedriver_installed": False,
        "chromedriver_version": None,
        "platform": platform.system(),
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome
    chrome_paths = [
        "/usr/bin/google-chrome",
        "/usr/bin/chromium-browser",
        "/usr/bin/chromium",
    ]
    
    for path in chrome_paths:
        if os.path.exists(path):
            result["chrome_installed"] = True
            try:
                import subprocess
                version = subprocess.check_output(
                    [path, "--version"], 
                    stderr=subprocess.DEVNULL
                ).decode().strip()
                result["chrome_version"] = version
                break
            except:
                pass
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ChromeDriver
    chromedriver_paths = [
        "/usr/bin/chromedriver",
        "/usr/local/bin/chromedriver",
    ]
    
    for path in chromedriver_paths:
        if os.path.exists(path):
            result["chromedriver_installed"] = True
            try:
                import subprocess
                version = subprocess.check_output(
                    [path, "--version"],
                    stderr=subprocess.DEVNULL
                ).decode().strip()
                result["chromedriver_version"] = version
                break
            except:
                pass
    
    return result


def test_chromedriver():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ChromeDriver –Ω–∞ Ubuntu
    
    Returns:
        bool: True –µ—Å–ª–∏ —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω
    """
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ChromeDriver –Ω–∞ Ubuntu...")
        print("="*60)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        info = check_chrome_installation()
        print(f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {info['platform']}")
        print(f"Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {info['chrome_installed']}")
        if info['chrome_version']:
            print(f"–í–µ—Ä—Å–∏—è Chrome: {info['chrome_version']}")
        print(f"ChromeDriver —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {info['chromedriver_installed']}")
        if info['chromedriver_version']:
            print(f"–í–µ—Ä—Å–∏—è ChromeDriver: {info['chromedriver_version']}")
        print()
        
        if not info['chrome_installed']:
            print("‚ùå Chrome –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            print_ubuntu_install_instructions()
            return False
        
        # –¢–µ—Å—Ç –¥—Ä–∞–π–≤–µ—Ä–∞
        print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞...")
        driver, wait = setup_chrome_driver(headless=True)
        
        print("–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        driver.get("https://www.google.com")
        
        title = driver.title
        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏
        is_webdriver = driver.execute_script("return navigator.webdriver")
        print(f"navigator.webdriver —Å–∫—Ä—ã—Ç: {is_webdriver is None}")
        
        user_agent = driver.execute_script("return navigator.userAgent")
        print(f"User-Agent: {user_agent[:50]}...")
        
        driver.quit()
        print("\n‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω!")
        print("="*60)
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ chromedriver")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤–µ—Ä—Å–∏–π Chrome –∏ ChromeDriver")
        return False


if __name__ == "__main__":
    print("üêß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ChromeDriver –¥–ª—è Ubuntu Server")
    print("="*60)
    
    success = test_chromedriver()
    
    if not success:
        print("\nüìñ –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print_ubuntu_install_instructions()